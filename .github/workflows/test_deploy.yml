# This is a basic workflow to help you get started with Actions

name: Test Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '.version'
      - 'VERSION'
      - '.github/**'
      - '.aws/**'
      - '.scripts/**'
      - 'package.json'
      - 'dist/web-lib/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-merge:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: development

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/fermium'
      - run: npm install

      - run: echo "cp src/config/env.example.js src/config/env.js"

  build:
    runs-on: ubuntu-latest
    environment: development
    needs: [ check-merge ]
    steps:
      - uses: actions/checkout@v2
      # Set APT_VERSION & Remove .env.staging
      - run: |
          export APT_VERSION=`cat VERSION`
          IFS="." read -r V_MAJOR V_MINOR V_PATCH <<< $APT_VERSION
          echo $APT_VERSION

      # Remove env.js
      - run: rm -f ./src/config/env.js  

      # install the RNAPP dependencies
      - name: echo Installing dependencies...    
      # Setup env.js file
        env:
          APT_ENV_JS2: ${{ secrets.APT_ENV_JS2 }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
        run: |
          export APT_VERSION=`cat VERSION`
          IFS="." read -r V_MAJOR V_MINOR V_PATCH <<< $APT_VERSION
          export V_MAJOR
          export V_MINOR
          export V_PATCH
          echo $APT_VERSION
          echo $V_MAJOR - $V_MINOR - $V_PATCH
          echo "module.exports = {" >> ./src/config/env.js
          echo "  env: {" >> ./src/config/env.js
          echo "    $APT_ENV_JS2" >> ./src/config/env.js
          echo "    VERSION: $APT_VERSION," >> ./src/config/env.js
          echo "  }," >> ./src/config/env.js
          echo "};" >> ./src/config/env.js
      - run: |
          echo $APT_VERSION
          cat ./src/config/env.js
      # Install yarn, rn cli for building bundles, build the RNAPP & build the rn-app BUNDLES
      - run: |
          yarn install
          npm i -g react-native-cli
          mkdir ~/bundle-output
